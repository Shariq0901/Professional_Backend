name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
<<<<<<< HEAD
    runs-on: ubuntu-latest
    environment: production_env
=======
    runs-on: ${{ matrix.os }}
    environment: production_env 
>>>>>>> 0e951183112e9e768856cc6221e0d0f1c1d2c237
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [20.x]
    steps:
<<<<<<< HEAD
      - name: Checkout code
        uses: actions/checkout@v4
=======
    - name: Checkout code
      uses: actions/checkout@v4
>>>>>>> 0e951183112e9e768856cc6221e0d0f1c1d2c237

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

<<<<<<< HEAD
      - name: Install dependencies
        run: npm install

      - name: Build code
        run: npm run build --if-present

      - name: Set environment variables
        run: |
=======
    - name: Determine Cache Directory
      id: npm-cache-dir
      run: echo "dir=node_modules" >> $GITHUB_ENV

    - name: Cache Node Modules
      uses: actions/cache@v4
      id: npm-cache
      with:
        path: ${{ env.dir }}  # Correctly referencing the directory to cache
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
      env:
        dir: node_modules

    - name: Install dependencies
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Build code
      run: npm run build --if-present

    - name: Set environment variables
      run: |
>>>>>>> 0e951183112e9e768856cc6221e0d0f1c1d2c237
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
          echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
          echo "CROSS_ORIGIN=${{ secrets.CROSS_ORIGIN }}" >> $GITHUB_ENV
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV

<<<<<<< HEAD
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs-envanto:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-envanto:latest

  deploy:
    needs: build
    runs-on: self-hosted
    environment: production_env
    steps:
      - name: Pull the image from Docker Hub
        run: docker-compose -f docker-compose.yml pull

      - name: Remove previous container (if exists)
        run: docker rm -f my_server || true

      - name: Run the pulled image with docker-compose
        run: docker-compose -f docker-compose.yml up -d
=======
    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and tag Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs-envanto:latest .

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-envanto:latest
>>>>>>> 0e951183112e9e768856cc6221e0d0f1c1d2c237
