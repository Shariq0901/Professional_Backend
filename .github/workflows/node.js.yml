# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code, and run tests across different versions of Node.js
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: 
      - main 
  pull_request:
    branches:  
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    environment: production_env 
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Determine Cache Directory
      id: npm-cache-dir
      run: echo "dir=node_modules" >> $GITHUB_ENV

    - name: Cache Node Modules
      uses: actions/cache@v4
      id: npm-cache
      with:
        path: ${{ env.dir }}  # Correctly referencing the directory to cache
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
      env:
        dir: node_modules

    - name: Install dependencies
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Build code
      run: npm run build --if-present

    - name: Run Tests
      run: npm test

    - name: Set environment variables
      run: |
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
          echo "DB_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
          echo "CROSS_ORIGIN=${{ secrets.CROSS_ORIGIN }}" >> $GITHUB_ENV
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV

    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and tag Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs-envanto:latest .

    - name: Push Docker image
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-envanto:latest
